{"ast":null,"code":"var _jsxFileName = \"C:\\\\Joshua\\\\University\\\\Software Studio\\\\Final Project\\\\outpairrel\\\\src\\\\components\\\\PostForm.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Input, Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { getMoodIcon } from 'utilities/weather.js';\nimport './PostForm.css';\nexport default class PostForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: props.city,\n      inputDanger: false,\n      moodToggle: false,\n      mood: 'na'\n    };\n    this.inputEl = null;\n    this.moodToggleEl = null;\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDropdownSelect = this.handleDropdownSelect.bind(this);\n    this.handleMoodToggle = this.handleMoodToggle.bind(this);\n    this.handlePost = this.handlePost.bind(this);\n  }\n\n  render() {\n    const {\n      inputValue,\n      moodToggle,\n      mood\n    } = this.state;\n    const inputDanger = this.state.inputDanger ? 'has-danger' : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      color: \"info\",\n      className: `d-flex flex-column flex-sm-row justify-content-center ${inputDanger}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mood align-self-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ButtonDropdown, {\n      type: \"buttom\",\n      isOpen: moodToggle,\n      toggle: this.handleMoodToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      className: \"mood-toggle\",\n      type: \"button\",\n      caret: true,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: getMoodIcon(mood),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }), \"\\xA0\", mood === 'na' ? 'Mood' : mood), /*#__PURE__*/React.createElement(DropdownMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      type: \"button\",\n      onClick: () => this.handleDropdownSelect('Clear'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: getMoodIcon('Clear'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 112\n      }\n    }), \"\\xA0\\xA0Clear\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      type: \"button\",\n      onClick: () => this.handleDropdownSelect('Clouds'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: getMoodIcon('Clouds'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 113\n      }\n    }), \"\\xA0\\xA0Clouds\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      type: \"button\",\n      onClick: () => this.handleDropdownSelect('Drizzle'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: getMoodIcon('Drizzle'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 114\n      }\n    }), \"\\xA0\\xA0Drizzle\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      type: \"button\",\n      onClick: () => this.handleDropdownSelect('Rain'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: getMoodIcon('Rain'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 111\n      }\n    }), \"\\xA0\\xA0Rain\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      type: \"button\",\n      onClick: () => this.handleDropdownSelect('Thunder'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: getMoodIcon('Thunder'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 114\n      }\n    }), \"\\xA0\\xA0Thunder\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      type: \"button\",\n      onClick: () => this.handleDropdownSelect('Snow'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: getMoodIcon('Snow'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 111\n      }\n    }), \"\\xA0\\xA0Snow\"), /*#__PURE__*/React.createElement(DropdownItem, {\n      type: \"button\",\n      onClick: () => this.handleDropdownSelect('Windy'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: getMoodIcon('Windy'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 112\n      }\n    }), \"\\xA0\\xA0Windy\")))), /*#__PURE__*/React.createElement(Input, {\n      className: \"input\",\n      type: \"textarea\",\n      innerRef: el => {\n        this.inputEl = el;\n      },\n      value: this.state.inputValue,\n      onChange: this.handleInputChange,\n      placeholder: \"What's on your mind?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-post align-self-end\",\n      color: \"info\",\n      onClick: this.handlePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Post\")));\n  }\n\n  handleDropdownSelect(mood) {\n    this.setState({\n      mood: mood\n    });\n  }\n\n  handleInputChange(e) {\n    const text = e.target.value;\n    this.setState({\n      inputValue: text\n    });\n\n    if (text) {\n      this.setState({\n        inputDanger: false\n      });\n    }\n  }\n\n  handleMoodToggle(e) {\n    this.setState((prevState, props) => ({\n      moodToggle: !prevState.moodToggle\n    }));\n  }\n\n  handlePost() {\n    if (this.state.mood === 'na') {\n      this.setState({\n        moodToggle: true\n      });\n      return;\n    }\n\n    if (!this.state.inputValue) {\n      this.setState({\n        inputDanger: true\n      });\n      return;\n    }\n\n    this.props.onPost(this.state.mood, this.state.inputValue);\n    this.setState({\n      inputValue: '',\n      mood: 'na'\n    });\n  }\n\n}\nPostForm.propTypes = {\n  onPost: PropTypes.func\n};","map":{"version":3,"sources":["C:/Joshua/University/Software Studio/Final Project/outpairrel/src/components/PostForm.jsx"],"names":["React","PropTypes","Alert","Input","Button","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","getMoodIcon","PostForm","Component","constructor","props","state","inputValue","city","inputDanger","moodToggle","mood","inputEl","moodToggleEl","handleInputChange","bind","handleDropdownSelect","handleMoodToggle","handlePost","render","el","setState","e","text","target","value","prevState","onPost","propTypes","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Alert,\r\n    Input,\r\n    Button,\r\n    ButtonDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n} from 'reactstrap';\r\n\r\nimport {getMoodIcon} from 'utilities/weather.js';\r\n\r\nimport './PostForm.css';\r\n\r\nexport default class PostForm extends React.Component {\r\n    static propTypes = {\r\n        onPost: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputValue: props.city,\r\n            inputDanger: false,\r\n            moodToggle: false,\r\n            mood: 'na'\r\n        };\r\n        this.inputEl = null;\r\n        this.moodToggleEl = null;\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleDropdownSelect = this.handleDropdownSelect.bind(this);\r\n        this.handleMoodToggle = this.handleMoodToggle.bind(this);\r\n\r\n        this.handlePost = this.handlePost.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const {inputValue, moodToggle, mood} = this.state;\r\n        const inputDanger = this.state.inputDanger ? 'has-danger' : '';\r\n        \r\n        return (\r\n            <div className='post-form'>\r\n                <Alert color='info' className={`d-flex flex-column flex-sm-row justify-content-center ${inputDanger}`}>\r\n                    <div className='mood align-self-start'>\r\n                        <ButtonDropdown type='buttom' isOpen={moodToggle} toggle={this.handleMoodToggle}>\r\n                            <DropdownToggle className='mood-toggle' type='button' caret color=\"secondary\">\r\n                                <i className={getMoodIcon(mood)}></i>&nbsp;{\r\n                                    mood === 'na' ? 'Mood' : mood\r\n                                }\r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                                <DropdownItem type='button' onClick={() => this.handleDropdownSelect('Clear')}><i className={getMoodIcon('Clear')}></i>&nbsp;&nbsp;Clear</DropdownItem>\r\n                                <DropdownItem type='button' onClick={() => this.handleDropdownSelect('Clouds')}><i className={getMoodIcon('Clouds')}></i>&nbsp;&nbsp;Clouds</DropdownItem>\r\n                                <DropdownItem type='button' onClick={() => this.handleDropdownSelect('Drizzle')}><i className={getMoodIcon('Drizzle')}></i>&nbsp;&nbsp;Drizzle</DropdownItem>\r\n                                <DropdownItem type='button' onClick={() => this.handleDropdownSelect('Rain')}><i className={getMoodIcon('Rain')}></i>&nbsp;&nbsp;Rain</DropdownItem>\r\n                                <DropdownItem type='button' onClick={() => this.handleDropdownSelect('Thunder')}><i className={getMoodIcon('Thunder')}></i>&nbsp;&nbsp;Thunder</DropdownItem>\r\n                                <DropdownItem type='button' onClick={() => this.handleDropdownSelect('Snow')}><i className={getMoodIcon('Snow')}></i>&nbsp;&nbsp;Snow</DropdownItem>\r\n                                <DropdownItem type='button' onClick={() => this.handleDropdownSelect('Windy')}><i className={getMoodIcon('Windy')}></i>&nbsp;&nbsp;Windy</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </ButtonDropdown>\r\n                    </div>\r\n                    <Input className='input' type='textarea' innerRef={el => {this.inputEl = el}} value={this.state.inputValue} onChange={this.handleInputChange} placeholder=\"What's on your mind?\"></Input>\r\n                    <Button className='btn-post align-self-end' color=\"info\" onClick={this.handlePost}>Post</Button>\r\n                </Alert>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleDropdownSelect(mood) {\r\n        this.setState({mood: mood});\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        const text = e.target.value\r\n        this.setState({inputValue: text});\r\n        if (text) {\r\n            this.setState({inputDanger: false});\r\n        }\r\n    }\r\n\r\n    handleMoodToggle(e) {\r\n        this.setState((prevState, props) => ({\r\n            moodToggle: !prevState.moodToggle\r\n        }));\r\n    }\r\n\r\n    handlePost() {\r\n        if (this.state.mood === 'na') {\r\n            this.setState({moodToggle: true});\r\n            return;\r\n        }\r\n        if (!this.state.inputValue) {\r\n            this.setState({inputDanger: true});\r\n            return;\r\n        }\r\n\r\n        this.props.onPost(this.state.mood, this.state.inputValue);\r\n        this.setState({\r\n            inputValue: '',\r\n            mood: 'na'\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}