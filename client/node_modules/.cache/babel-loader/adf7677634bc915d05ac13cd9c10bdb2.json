{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Outpairrel\\\\src\\\\components\\\\Photo.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { Input, Button } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { setImg, addPost, clearTag } from '../actions/post-actions';\nimport './Photo.css';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\n\nclass Photo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: '',\n      loading: false,\n      change: false,\n      upload: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      img\n    } = this.props;\n    console.log('img: ' + img);\n\n    if (img) {\n      this.setState({\n        image: img,\n        change: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      listTags\n    } = this.props;\n    let r;\n    var name = '';\n\n    const uploadImage = async e => {\n      const files = e.target.files;\n      const data = new FormData();\n      data.append('file', files[0]);\n      data.append('upload_preset', 'project'); // setLoading(true)\n      // setChange(true)\n\n      this.setState({\n        loading: true,\n        change: true\n      });\n      const res = await fetch('https://api.cloudinary.com/v1_1/ddexbpc6j/image/upload', {\n        method: 'POST',\n        body: data\n      });\n      const file = await res.json(); // setImage(file.secure_url)\n      // setLoading(false)\n\n      this.setState({\n        loading: false,\n        image: file.secure_url\n      });\n      this.props.dispatch(setImg(file.secure_url));\n    };\n\n    if (this.state.change) {\n      if (this.state.loading) {\n        name = ''; // console.log('here')\n\n        r = /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        }, \" Loading \");\n      } else {\n        name = '-change';\n        r = /*#__PURE__*/React.createElement(\"img\", {\n          src: this.state.image,\n          style: {\n            width: '300px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }\n        });\n      }\n    } else {\n      name = '';\n      r = /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        placeholder: \"Upload an image\",\n        onChange: uploadImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      });\n    }\n\n    let children = /*#__PURE__*/React.createElement(ListGroupItem, {\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"empty-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }));\n\n    if (listTags.length) {\n      children = listTags.map(tags => /*#__PURE__*/React.createElement(ListGroupItem, {\n        style: {\n          width: '25rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: tags[0].photo,\n        alt: tags[0].id,\n        style: {\n          width: '5px',\n          height: '5px',\n          paddingRight: '1rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, tags[0].name)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `rec${name} align-items-center align-self-center`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, r)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"search\",\n      style: {\n        width: '25rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/tags\",\n      style: {\n        textDecoration: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Add tags\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, children))), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      style: {\n        display: 'block',\n        height: '2.5rem',\n        right: '1rem',\n        marginTop: 'auto'\n      },\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Upload\"));\n  }\n\n  handleClick() {\n    const {\n      listTags\n    } = this.props;\n    this.props.dispatch(addPost(listTags, this.state.image));\n    this.props.dispatch(clearTag());\n    this.setState({\n      image: '',\n      loading: true,\n      change: false\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  listTags: state.listTags.item,\n  img: state.listTags.img,\n  upload: state.listTags.upload\n}))(Photo);","map":{"version":3,"sources":["C:/Users/User/Desktop/Outpairrel/src/components/Photo.js"],"names":["React","useState","useEffect","Component","Input","Button","BrowserRouter","Router","Route","Link","useSelector","useDispatch","connect","setImg","addPost","clearTag","ListGroup","ListGroupItem","Photo","constructor","props","state","image","loading","change","upload","handleClick","bind","componentDidMount","img","console","log","setState","render","listTags","r","name","uploadImage","e","files","target","data","FormData","append","res","fetch","method","body","file","json","secure_url","dispatch","width","children","display","length","map","tags","photo","id","height","paddingRight","margin","textDecoration","right","marginTop","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,QAA1B,QAA0C,yBAA1C;AACA,OAAO,aAAP;AACA,SACIC,SADJ,EAEIC,aAFJ,QAGO,YAHP;;AAKA,MAAMC,KAAN,SAAoBf,SAApB,CAA8B;AAC1BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE,KAFA;AAGTC,MAAAA,MAAM,EAAE,KAHC;AAITC,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKT,KAAnB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,GAAtB;;AACA,QAAGA,GAAH,EAAO;AACH,WAAKG,QAAL,CAAc;AACVV,QAAAA,KAAK,EAAEO,GADG;AAEVL,QAAAA,MAAM,EAAE;AAFE,OAAd;AAIH;AACJ;;AAEDS,EAAAA,MAAM,GAAE;AACR,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKd,KAAxB;AACA,QAAIe,CAAJ;AACA,QAAIC,IAAI,GAAG,EAAX;;AAEA,UAAMC,WAAW,GAAG,MAAMC,CAAN,IAAW;AAC3B,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,YAAME,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBJ,KAAK,CAAC,CAAD,CAAzB;AACAE,MAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6B,SAA7B,EAJ2B,CAK3B;AACA;;AACA,WAAKX,QAAL,CAAc;AACVT,QAAAA,OAAO,EAAC,IADE;AAEVC,QAAAA,MAAM,EAAE;AAFE,OAAd;AAIA,YAAMoB,GAAG,GAAG,MAAMC,KAAK,CACnB,wDADmB,EAEnB;AACIC,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,IAAI,EAAEN;AAFV,OAFmB,CAAvB;AAOA,YAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB,CAlB2B,CAoB3B;AACA;;AACA,WAAKjB,QAAL,CAAc;AACVT,QAAAA,OAAO,EAAE,KADC;AAEVD,QAAAA,KAAK,EAAE0B,IAAI,CAACE;AAFF,OAAd;AAIA,WAAK9B,KAAL,CAAW+B,QAAX,CAAoBtC,MAAM,CAACmC,IAAI,CAACE,UAAN,CAA1B;AACH,KA3BD;;AA8BA,QAAI,KAAK7B,KAAL,CAAWG,MAAf,EAAuB;AACnB,UAAI,KAAKH,KAAL,CAAWE,OAAf,EAAwB;AACpBa,QAAAA,IAAI,GAAG,EAAP,CADoB,CAEpB;;AACAD,QAAAA,CAAC,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAJ;AACH,OAJD,MAKK;AACDC,QAAAA,IAAI,GAAG,SAAP;AACAD,QAAAA,CAAC,gBAAG;AAAK,UAAA,GAAG,EAAE,KAAKd,KAAL,CAAWC,KAArB;AAA4B,UAAA,KAAK,EAAE;AAAE8B,YAAAA,KAAK,EAAE;AAAT,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AACH;AACJ,KAVD,MAWK;AACDhB,MAAAA,IAAI,GAAG,EAAP;AACAD,MAAAA,CAAC,gBAAG;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,WAAW,EAAC,iBAHZ;AAIA,QAAA,QAAQ,EAAEE,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAMH;;AAED,QAAIgB,QAAQ,gBACR,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;;AAMA,QAAGpB,QAAQ,CAACqB,MAAZ,EAAoB;AAChBF,MAAAA,QAAQ,GAAGnB,QAAQ,CAACsB,GAAT,CAAaC,IAAI,iBACxB,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAACL,UAAAA,KAAK,EAAE;AAAR,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAEK,IAAI,CAAC,CAAD,CAAJ,CAAQC,KAAlB;AAAyB,QAAA,GAAG,EAAED,IAAI,CAAC,CAAD,CAAJ,CAAQE,EAAtC;AAA0C,QAAA,KAAK,EAAE;AAACP,UAAAA,KAAK,EAAE,KAAR;AAAeQ,UAAAA,MAAM,EAAC,KAAtB;AAA6BC,UAAAA,YAAY,EAAE;AAA3C,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOJ,IAAI,CAAC,CAAD,CAAJ,CAAQrB,IAAf,CAFJ,CADO,CAAX;AAMH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAM,MAAA,SAAS,EAAG,MAAKA,IAAK,uCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAE;AAAE0B,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK3B,CADL,CADJ,CADR,eAMQ;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAACiB,QAAAA,KAAK,EAAE;AAAR,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAiB,MAAA,KAAK,EAAE;AAAEW,QAAAA,cAAc,EAAE;AAAlB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYV,QAAZ,CADJ,CAJJ,CANR,eAcI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,OAAV;AAAmBM,QAAAA,MAAM,EAAE,QAA3B;AAAqCI,QAAAA,KAAK,EAAE,MAA5C;AAAoDC,QAAAA,SAAS,EAAE;AAA/D,OAApB;AAA4F,MAAA,OAAO,EAAE,KAAKvC,WAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,CADJ;AAmBC;;AAEDA,EAAAA,WAAW,GAAE;AACT,UAAM;AAACQ,MAAAA;AAAD,QAAa,KAAKd,KAAxB;AACA,SAAKA,KAAL,CAAW+B,QAAX,CAAoBrC,OAAO,CAACoB,QAAD,EAAW,KAAKb,KAAL,CAAWC,KAAtB,CAA3B;AACA,SAAKF,KAAL,CAAW+B,QAAX,CAAoBpC,QAAQ,EAA5B;AACA,SAAKiB,QAAL,CAAc;AACVV,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,OAAO,EAAE,IAFC;AAGVC,MAAAA,MAAM,EAAE;AAHE,KAAd;AAKH;;AA3HyB;;AA+H9B,eAAeZ,OAAO,CAACS,KAAK,KAAK;AAC7Ba,EAAAA,QAAQ,EAAEb,KAAK,CAACa,QAAN,CAAegC,IADI;AAE7BrC,EAAAA,GAAG,EAAER,KAAK,CAACa,QAAN,CAAeL,GAFS;AAG7BJ,EAAAA,MAAM,EAAEJ,KAAK,CAACa,QAAN,CAAeT;AAHM,CAAL,CAAN,CAAP,CAIXP,KAJW,CAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport { Input, Button } from 'reactstrap';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { setImg, addPost, clearTag } from '../actions/post-actions';\r\nimport './Photo.css'\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem\r\n} from 'reactstrap';\r\n\r\nclass Photo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: '',\r\n            loading: false,\r\n            change: false,\r\n            upload: false\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {img} = this.props\r\n        console.log('img: ' + img)\r\n        if(img){\r\n            this.setState({\r\n                image: img,\r\n                change: true\r\n            })\r\n        }\r\n    }\r\n    \r\n    render(){\r\n    const {listTags} = this.props\r\n    let r;\r\n    var name = ''\r\n\r\n    const uploadImage = async e => {\r\n        const files = e.target.files\r\n        const data = new FormData()\r\n        data.append('file', files[0])\r\n        data.append('upload_preset', 'project')\r\n        // setLoading(true)\r\n        // setChange(true)\r\n        this.setState({\r\n            loading:true,\r\n            change: true\r\n        })\r\n        const res = await fetch(\r\n            'https://api.cloudinary.com/v1_1/ddexbpc6j/image/upload',\r\n            {\r\n                method: 'POST',\r\n                body: data\r\n            }\r\n        )\r\n        const file = await res.json()\r\n\r\n        // setImage(file.secure_url)\r\n        // setLoading(false)\r\n        this.setState({\r\n            loading: false,\r\n            image: file.secure_url\r\n        })\r\n        this.props.dispatch(setImg(file.secure_url))\r\n    }\r\n\r\n\r\n    if (this.state.change) {\r\n        if (this.state.loading) {\r\n            name = ''\r\n            // console.log('here')\r\n            r = <span> Loading </span>\r\n        }\r\n        else {\r\n            name = '-change'\r\n            r = <img src={this.state.image} style={{ width: '300px' }} />\r\n        }\r\n    }\r\n    else {\r\n        name = '';\r\n        r = <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload an image\"\r\n            onChange={uploadImage}\r\n        />\r\n    }\r\n\r\n    let children = (\r\n        <ListGroupItem style={{display: 'none'}}>\r\n            <div className=\"empty-text\"></div>\r\n        </ListGroupItem>\r\n    );\r\n\r\n    if(listTags.length) {\r\n        children = listTags.map(tags => (\r\n            <ListGroupItem style={{width: '25rem'}}>\r\n                <img src={tags[0].photo} alt={tags[0].id} style={{width: '5px', height:'5px', paddingRight: '1rem'}}/>\r\n                <span>{tags[0].name}</span>\r\n            </ListGroupItem>\r\n        ))\r\n    }\r\n    return (\r\n        <div className=\"photo\">\r\n                <span className={`rec${name} align-items-center align-self-center`}>\r\n                    <span style={{ margin: 'auto' }}>\r\n                        {r}\r\n                    </span>\r\n                </span>\r\n                <span className='search' style={{width: '25rem'}}>\r\n                    <Link to=\"/tags\" style={{ textDecoration: 'none' }}>\r\n                    Add tags\r\n                    </Link>\r\n                    <div className='tags'>\r\n                        <ListGroup>{children}</ListGroup>\r\n                    </div>\r\n                </span>\r\n            <Link to=\"/\" style={{display: 'block', height: '2.5rem', right: '1rem', marginTop: 'auto'}} onClick={this.handleClick}>Upload</Link>\r\n        </div>\r\n            \r\n    )\r\n    }\r\n\r\n    handleClick(){\r\n        const {listTags} = this.props\r\n        this.props.dispatch(addPost(listTags, this.state.image))\r\n        this.props.dispatch(clearTag())\r\n        this.setState({\r\n            image: '',\r\n            loading: true,\r\n            change: false\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default connect(state => ({\r\n    listTags: state.listTags.item,\r\n    img: state.listTags.img,\r\n    upload: state.listTags.upload\r\n}))(Photo);\r\n"]},"metadata":{},"sourceType":"module"}