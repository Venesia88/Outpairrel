{"ast":null,"code":"const postKey = 'posts';\nexport function listWardrobe(filters = []) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(_listWardrobe(filters));\n    }, 500);\n  });\n} // Simulated server-side code\n\nfunction _listWardrobe(filters = []) {\n  // console.log(\"item: \" + item)\n  let postString = localStorage.getItem(postKey);\n  let posts = postString ? JSON.parse(postString) : [];\n  console.log('filters: ' + filters);\n\n  if (posts.length > 0 && filters.length > 0) {\n    posts = posts.filter(p => {\n      // return !p.tags.some(tag => !filters.includes(tag))\n      return !filters.some(tag => !p.tags.includes(tag));\n    });\n  } // console.log(posts)\n\n\n  return posts;\n}\n\n;\nexport function createWardrobe(id, tags) {\n  return new Promise((resolve, reject) => {\n    resolve(_createWardrobe(id, tags));\n  });\n}\n\nfunction _createWardrobe(id, tags) {\n  const newPost = {\n    id: id,\n    tags: tags\n  };\n  const posts = [newPost, ..._listWardrobe()]; // localStorage.setItem(postKey, JSON.stringify([]));\n\n  localStorage.setItem(postKey, JSON.stringify(posts));\n  console.log('posts: ' + posts);\n  return newPost;\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/Outpairrel/src/api/wardrobe.js"],"names":["postKey","listWardrobe","filters","Promise","resolve","reject","setTimeout","_listWardrobe","postString","localStorage","getItem","posts","JSON","parse","console","log","length","filter","p","some","tag","tags","includes","createWardrobe","id","_createWardrobe","newPost","setItem","stringify"],"mappings":"AAEA,MAAMA,OAAO,GAAG,OAAhB;AAIA,OAAO,SAASC,YAAT,CAAsBC,OAAO,GAAG,EAAhC,EAAoC;AACvC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,UAAU,CAAC,MAAM;AACbF,MAAAA,OAAO,CAACG,aAAa,CAACL,OAAD,CAAd,CAAP;AACH,KAFS,EAEP,GAFO,CAAV;AAGH,GAJM,CAAP;AAKH,C,CAED;;AACA,SAASK,aAAT,CAAuBL,OAAO,GAAG,EAAjC,EAAqC;AAEjC;AACA,MAAIM,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqBV,OAArB,CAAjB;AACA,MAAIW,KAAK,GAAGH,UAAU,GAAGI,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAH,GAA4B,EAAlD;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcb,OAA1B;;AACA,MAAIS,KAAK,CAACK,MAAN,GAAe,CAAf,IAAoBd,OAAO,CAACc,MAAR,GAAiB,CAAzC,EAA4C;AACxCL,IAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAI;AACtB;AACA,aAAO,CAAChB,OAAO,CAACiB,IAAR,CAAaC,GAAG,IAAI,CAACF,CAAC,CAACG,IAAF,CAAOC,QAAP,CAAgBF,GAAhB,CAArB,CAAR;AACH,KAHO,CAAR;AAIH,GAZgC,CAajC;;;AACA,SAAOT,KAAP;AACH;;AAAA;AAED,OAAO,SAASY,cAAT,CAAwBC,EAAxB,EAA4BH,IAA5B,EAAkC;AACrC,SAAO,IAAIlB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCD,IAAAA,OAAO,CAACqB,eAAe,CAACD,EAAD,EAAKH,IAAL,CAAhB,CAAP;AACH,GAFM,CAAP;AAGH;;AAED,SAASI,eAAT,CAAyBD,EAAzB,EAA6BH,IAA7B,EAAmC;AAC/B,QAAMK,OAAO,GAAG;AACZF,IAAAA,EAAE,EAAEA,EADQ;AAEZH,IAAAA,IAAI,EAAEA;AAFM,GAAhB;AAIA,QAAMV,KAAK,GAAG,CACVe,OADU,EAEV,GAAGnB,aAAa,EAFN,CAAd,CAL+B,CAS/B;;AACAE,EAAAA,YAAY,CAACkB,OAAb,CAAqB3B,OAArB,EAA8BY,IAAI,CAACgB,SAAL,CAAejB,KAAf,CAA9B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAWJ,KAAvB;AACA,SAAOe,OAAP;AACH","sourcesContent":["\r\n\r\nconst postKey = 'posts';\r\n\r\n\r\n\r\nexport function listWardrobe(filters = []) {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(_listWardrobe(filters));\r\n        }, 500);\r\n    });\r\n}\r\n\r\n// Simulated server-side code\r\nfunction _listWardrobe(filters = []) {\r\n    \r\n    // console.log(\"item: \" + item)\r\n    let postString = localStorage.getItem(postKey);\r\n    let posts = postString ? JSON.parse(postString) : [];\r\n    \r\n    console.log('filters: ' + filters)\r\n    if (posts.length > 0 && filters.length > 0) {\r\n        posts = posts.filter(p => {\r\n            // return !p.tags.some(tag => !filters.includes(tag))\r\n            return !filters.some(tag => !p.tags.includes(tag))\r\n        });\r\n    }\r\n    // console.log(posts)\r\n    return posts;\r\n};\r\n\r\nexport function createWardrobe(id, tags) {\r\n    return new Promise((resolve, reject) => {\r\n        resolve(_createWardrobe(id, tags));\r\n    });\r\n}\r\n\r\nfunction _createWardrobe(id, tags) {\r\n    const newPost = {\r\n        id: id,\r\n        tags: tags\r\n    };\r\n    const posts = [\r\n        newPost,\r\n        ..._listWardrobe()\r\n    ];\r\n    // localStorage.setItem(postKey, JSON.stringify([]));\r\n    localStorage.setItem(postKey, JSON.stringify(posts));\r\n    console.log('posts: '+ posts)\r\n    return newPost;\r\n}"]},"metadata":{},"sourceType":"module"}