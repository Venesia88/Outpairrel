{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Wilbert\\\\Repository\\\\outpairrel\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";var postKey='posts';export function listWardrobe(){var filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return new Promise(function(resolve,reject){setTimeout(function(){resolve(_listWardrobe(filters));},500);});}// Simulated server-side code\nfunction _listWardrobe(){var filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];// console.log(\"item: \" + item)\nvar postString=localStorage.getItem(postKey);// let posts = postString ? JSON.parse(postString) : [];\nvar posts=[{id:1,tags:['women','hoodie']},{id:1,tags:['men','shirt']},{id:2,tags:['hoodie']}];console.log('filters: '+filters);if(posts.length>0&&filters.length>0){posts=posts.filter(function(p){// return !p.tags.some(tag => !filters.includes(tag))\nreturn!filters.some(function(tag){return!p.tags.includes(tag);});});}// console.log(posts)\nreturn posts;};export function createWardrobe(id,tags){return new Promise(function(resolve,reject){resolve(_createWardrobe(id,tags));});}function _createWardrobe(id,tags){var newPost={id:id,tags:tags};var posts=[newPost].concat(_toConsumableArray(_listWardrobe()));// localStorage.setItem(postKey, JSON.stringify([]));\nlocalStorage.setItem(postKey,JSON.stringify(posts));// console.log('posts: '+ posts)\nreturn newPost;}","map":{"version":3,"sources":["C:/Users/Wilbert/repository/outpairrel/client/src/api/wardrobe.js"],"names":["postKey","listWardrobe","filters","Promise","resolve","reject","setTimeout","_listWardrobe","postString","localStorage","getItem","posts","id","tags","console","log","length","filter","p","some","tag","includes","createWardrobe","_createWardrobe","newPost","setItem","JSON","stringify"],"mappings":"sLAAA,GAAMA,CAAAA,OAAO,CAAG,OAAhB,CAEA,MAAO,SAASC,CAAAA,YAAT,EAAoC,IAAdC,CAAAA,OAAc,2DAAJ,EAAI,CACvC,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCC,UAAU,CAAC,UAAM,CACbF,OAAO,CAACG,aAAa,CAACL,OAAD,CAAd,CAAP,CACH,CAFS,CAEP,GAFO,CAAV,CAGH,CAJM,CAAP,CAKH,CAED;AACA,QAASK,CAAAA,aAAT,EAAqC,IAAdL,CAAAA,OAAc,2DAAJ,EAAI,CAEjC;AACA,GAAIM,CAAAA,UAAU,CAAGC,YAAY,CAACC,OAAb,CAAqBV,OAArB,CAAjB,CACA;AACA,GAAIW,CAAAA,KAAK,CAAG,CACR,CACIC,EAAE,CAAE,CADR,CAEIC,IAAI,CAAE,CAAC,OAAD,CAAS,QAAT,CAFV,CADQ,CAKR,CACID,EAAE,CAAE,CADR,CAEIC,IAAI,CAAC,CAAC,KAAD,CAAO,OAAP,CAFT,CALQ,CASR,CACID,EAAE,CAAE,CADR,CAEIC,IAAI,CAAC,CAAC,QAAD,CAFT,CATQ,CAAZ,CAeAC,OAAO,CAACC,GAAR,CAAY,YAAcb,OAA1B,EACA,GAAIS,KAAK,CAACK,MAAN,CAAe,CAAf,EAAoBd,OAAO,CAACc,MAAR,CAAiB,CAAzC,CAA4C,CACxCL,KAAK,CAAGA,KAAK,CAACM,MAAN,CAAa,SAAAC,CAAC,CAAI,CACtB;AACA,MAAO,CAAChB,OAAO,CAACiB,IAAR,CAAa,SAAAC,GAAG,QAAI,CAACF,CAAC,CAACL,IAAF,CAAOQ,QAAP,CAAgBD,GAAhB,CAAL,EAAhB,CAAR,CACH,CAHO,CAAR,CAIH,CACD;AACA,MAAOT,CAAAA,KAAP,CACH,EAED,MAAO,SAASW,CAAAA,cAAT,CAAwBV,EAAxB,CAA4BC,IAA5B,CAAkC,CACrC,MAAO,IAAIV,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCD,OAAO,CAACmB,eAAe,CAACX,EAAD,CAAKC,IAAL,CAAhB,CAAP,CACH,CAFM,CAAP,CAGH,CAED,QAASU,CAAAA,eAAT,CAAyBX,EAAzB,CAA6BC,IAA7B,CAAmC,CAC/B,GAAMW,CAAAA,OAAO,CAAG,CACZZ,EAAE,CAAEA,EADQ,CAEZC,IAAI,CAAEA,IAFM,CAAhB,CAIA,GAAMF,CAAAA,KAAK,EACPa,OADO,4BAEJjB,aAAa,EAFT,EAAX,CAIA;AACAE,YAAY,CAACgB,OAAb,CAAqBzB,OAArB,CAA8B0B,IAAI,CAACC,SAAL,CAAehB,KAAf,CAA9B,EACA;AACA,MAAOa,CAAAA,OAAP,CACH","sourcesContent":["const postKey = 'posts';\r\n\r\nexport function listWardrobe(filters = []) {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(_listWardrobe(filters));\r\n        }, 500);\r\n    });\r\n}\r\n\r\n// Simulated server-side code\r\nfunction _listWardrobe(filters = []) {\r\n    \r\n    // console.log(\"item: \" + item)\r\n    let postString = localStorage.getItem(postKey);\r\n    // let posts = postString ? JSON.parse(postString) : [];\r\n    let posts = [\r\n        {\r\n            id: 1,\r\n            tags: ['women','hoodie']\r\n        },\r\n        {\r\n            id: 1,\r\n            tags:['men','shirt']\r\n        },\r\n        {\r\n            id: 2,\r\n            tags:['hoodie']\r\n        }\r\n    ]\r\n    \r\n    console.log('filters: ' + filters)\r\n    if (posts.length > 0 && filters.length > 0) {\r\n        posts = posts.filter(p => {\r\n            // return !p.tags.some(tag => !filters.includes(tag))\r\n            return !filters.some(tag => !p.tags.includes(tag))\r\n        });\r\n    }\r\n    // console.log(posts)\r\n    return posts;\r\n};\r\n\r\nexport function createWardrobe(id, tags) {\r\n    return new Promise((resolve, reject) => {\r\n        resolve(_createWardrobe(id, tags));\r\n    });\r\n}\r\n\r\nfunction _createWardrobe(id, tags) {\r\n    const newPost = {\r\n        id: id,\r\n        tags: tags\r\n    };\r\n    const posts = [\r\n        newPost,\r\n        ..._listWardrobe()\r\n    ];\r\n    // localStorage.setItem(postKey, JSON.stringify([]));\r\n    localStorage.setItem(postKey, JSON.stringify(posts));\r\n    // console.log('posts: '+ posts)\r\n    return newPost;\r\n}"]},"metadata":{},"sourceType":"module"}